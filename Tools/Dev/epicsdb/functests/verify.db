record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_INTR_TOP_IS_RAW") {
    field(DESC, "FPGA top-level interrupt summary registe")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_INTR_TOP_IS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_INTR_TOP_IS_MSK_RAW") {
    field(DESC, "FPGA top-level interrupt summary registe")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_INTR_TOP_IS_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_INTR_TOP_IS_MSK_CTRL") {
    field(DESC, "FPGA top-level interrupt summary registe")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_INTR_TOP_IS_MSK")
    field(VAL, "31")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(PINI, "YES")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_INTR_RAW") {
    field(DESC, "SYS interrupt event register.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_INTR_CTRL") {
    field(DESC, "SYS interrupt event register.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SYS_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_INTR_MSK_RAW") {
    field(DESC, "SYS interrupt event enable register.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_INTR_MSK_CTRL") {
    field(DESC, "SYS interrupt event enable register.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SYS_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_GOODBEEF_RAW") {
    field(DESC, "Control card goodbeef test register raw ")
    field(DTYP, "asynInt32")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_GOODBEEF")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID1_RAW") {
    field(DESC, "System ID register 1.")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID1_CHIP_TYPE")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_ID1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID1_CHIP_TYPE") {
    field(DESC, "System chip type")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID1_YEAR_STAMP")
    field(CALC, "(A>>28)&0xf")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID1_RAW MS")
    field(HIHI, "0")
    field(LOLO, "0")
    field(HIGH, "0")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID1_YEAR_STAMP") {
    field(DESC, "Firmware year stamp as BCD")
    field(CALC, "A&0xfffffff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID1_RAW MS")
    field(HIHI, "0")
    field(LOLO, "0")
    field(HIGH, "0")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID2_RAW") {
    field(DESC, "System ID register 2.")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID2_TIME_STAMP")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_ID2")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID2_TIME_STAMP") {
    field(DESC, "Firmware time stamp as BCD")
    field(CALC, "A&0xffffffff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_ID2_RAW MS")
    field(HIHI, "0")
    field(LOLO, "0")
    field(HIGH, "0")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_CTRL_RAW") {
    field(DESC, "Ethernet Control")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_CTRL_CTRL") {
    field(DESC, "Ethernet Control")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SYS_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_RAW") {
    field(DESC, "Ethernet Status")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_TIMEOUT_COUNT")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_TIMEOUT_COUNT") {
    field(DESC, "A count of timeouts occurred on the 1 wi")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_BAD_COUNT")
    field(CALC, "(A>>16)&0xff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_RAW MS")
    field(HIHI, "0")
    field(LOLO, "0")
    field(HIGH, "0")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_BAD_COUNT") {
    field(DESC, "A count of bad packets received")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_DUPLICATE_COUNT")
    field(CALC, "(A>>8)&0xff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_RAW MS")
    field(HIHI, "0")
    field(LOLO, "0")
    field(HIGH, "0")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_DUPLICATE_COUNT") {
    field(DESC, "A count of duplicate packets sent")
    field(CALC, "A&0xff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_STATUS_RAW MS")
    field(HIHI, "0")
    field(LOLO, "0")
    field(HIGH, "0")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_MDIO_CTRL_RAW") {
    field(DESC, "Ethernet PHY MDIO Interface")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_MDIO_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_MDIO_CTRL_CTRL") {
    field(DESC, "Ethernet PHY MDIO Interface")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SYS_MDIO_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_MDIO_STATUS_RAW") {
    field(DESC, "Ethernet MDIO Status")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_MDIO_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_MDIO_DATA_RAW") {
    field(DESC, "MDIO register for data used in transacti")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_MDIO_DATA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_MDIO_DATA_CTRL") {
    field(DESC, "MDIO register for data used in transacti")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SYS_MDIO_DATA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_REG_VERSION_RAW") {
    field(DESC, "Subversion register for the register int")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_REG_VERSION_NUM")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SYS_REG_VERSION")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_REG_VERSION_MOD_I") {
    field(DESC, "Version modified bit. Indicates modifica")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_REG_VERSION_RAW MS")
    field(SHFT, "31")
    field(ZRST, "Not modified")
    field(ONST, "Modified")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_REG_VERSION_NUM") {
    field(DESC, "Subversion revision number for the XML r")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_REG_VERSION_MOD_I")
    field(CALC, "A&0xfffffff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SYS_REG_VERSION_RAW MS")
    field(HIHI, "0")
    field(LOLO, "0")
    field(HIGH, "0")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_INTR_RAW") {
    field(DESC, "CARD interrupt event register.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_INTR_CTRL") {
    field(DESC, "CARD interrupt event register.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_INTR_MSK_RAW") {
    field(DESC, "CARD interrupt event enable register.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_INTR_MSK_CTRL") {
    field(DESC, "CARD interrupt event enable register.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_CTRL_RAW") {
    field(DESC, "Control card general control register")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_CTRL_RESET_I")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_CTRL_CTRL") {
    field(DESC, "Control card general control register")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_CTRL_RESET_I") {
    field(DESC, "Reset the Control FPGA")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_CTRL_RAW MS")
    field(SHFT, "0")
    field(ZRST, "Normal operation")
    field(ONST, "Held in reset")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(bo, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_CTRL_RESET_O") {
    field(DESC, "Reset the Control FPGA")
    field(DTYP, "asynUInt32Digital")
    field(OMSL, "supervisory")
    field(OUT, "@asynMask($(PORT),$(ADDR), 0x00000001)CTRL_CARD_CTRL")
    field(ONAM, "Held in reset")
    field(ZNAM, "Normal operation")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_STATUS_RAW") {
    field(DESC, "Control card general status register")
    field(DTYP, "asynInt32")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_ID0_RAW") {
    field(DESC, "Control Card Silicon Serial Number")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_ID")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_ID0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_ID1_RAW") {
    field(DESC, "Control Card Silicon Serial Number")
    field(DTYP, "asynInt32")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_ID1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_CTRL_RAW") {
    field(DESC, "MAX6696 Temperature sensor control.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_TEMP_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_CTRL_CTRL") {
    field(DESC, "MAX6696 Temperature sensor control.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_TEMP_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_STAT_RAW") {
    field(DESC, "MAX6696 Temperature sensor status.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_TEMP_STAT")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_DATA_RAW") {
    field(DESC, "MAX6696 Temperature sensor manual mode d")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_TEMP_DATA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_DATA_CTRL") {
    field(DESC, "MAX6696 Temperature sensor manual mode d")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_TEMP_DATA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_RAW") {
    field(DESC, "MAX6696 Temperature sensor temperatures.")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_EXT2_TEMP")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_TEMP_RES")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_EXT2_TEMP") {
    field(DESC, "Temperature in degrees C of the FPGA tem")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_EXT1_TEMP")
    field(CALC, "(A>>16)&0xff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_RAW MS")
    field(EGU, "C")
    field(HIHI, "90")
    field(LOLO, "0")
    field(HIGH, "50")
    field(LOW, "10")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "2")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_EXT1_TEMP") {
    field(DESC, "Temperature in degrees C of power suppli")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_INT_TEMP")
    field(CALC, "(A>>8)&0xff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_RAW MS")
    field(EGU, "C")
    field(HIHI, "90")
    field(LOLO, "0")
    field(HIGH, "55")
    field(LOW, "10")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "2")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_INT_TEMP") {
    field(DESC, "Temperature of the MAX6696 chip in degre")
    field(CALC, "A&0xff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_TEMP_RES_RAW MS")
    field(EGU, "C")
    field(HIHI, "90")
    field(LOLO, "0")
    field(HIGH, "40")
    field(LOW, "10")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "2")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_CTRL_RAW") {
    field(DESC, "Control Card Power monitor control")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_CTRL_CTRL") {
    field(DESC, "Control Card Power monitor control")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_STAT_RAW") {
    field(DESC, "Control Card Power monitor status")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_STAT")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_RAW") {
    field(DESC, "Control Card power monitor output")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_VCC_IN")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_48V")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_VCC_IN") {
    field(DESC, "Control card 48V input voltage")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_VCC_AMPS")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_RAW MS")
    field(EGU, "V")
    field(HIHI, "60")
    field(LOLO, "40")
    field(HIGH, "52")
    field(LOW, "48")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "1")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_VCC_AMPS") {
    field(DESC, "Control card 48V input current")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_MON_48V_PWR")
    field(CALC, "A&0xffff")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_RAW MS")
    field(EGU, "mA")
    field(HIHI, "200")
    field(LOLO, "100")
    field(HIGH, "150")
    field(LOW, "120")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "10")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_TEMP_RAW") {
    field(DESC, "System Monitor FPGA Temperature")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_TEMP_TEMP")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_TEMP")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_TEMP_TEMP") {
    field(DESC, "System monitor FPGA temp")
    field(CALC, "((A&0xffff)*503.975/1024)-273.15")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_TEMP_RAW MS")
    field(EGU, "C")
    field(HIHI, "80")
    field(LOLO, "0")
    field(HIGH, "50")
    field(LOW, "20")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "2")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_FPGA_RAW") {
    field(DESC, "Control Card FPGA system monitor voltage")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_FPGA_VCC_INT")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_FPGA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_FPGA_VCC_INT") {
    field(DESC, "Control Card FPGA Core Voltage")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_FPGA_VCC_AUX")
    field(CALC, "((A>>16)&0xffff)*3/1024")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_FPGA_RAW MS")
    field(EGU, "V")
    field(HIHI, "1")
    field(LOLO, "0")
    field(HIGH, "1")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_FPGA_VCC_AUX") {
    field(DESC, "Control Card FPGA Auxiliary Voltage")
    field(CALC, "(A&0xffff)*3/1024")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_FPGA_RAW MS")
    field(EGU, "V")
    field(HIHI, "2")
    field(LOLO, "2")
    field(HIGH, "2")
    field(LOW, "2")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC0_RAW") {
    field(DESC, "Control Card FPGA system monitor voltage")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC0_VCC_1V")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_VCC0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC0_VCC_1V") {
    field(DESC, "Control Card 1V plane voltage")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC0_VCC_1VMGT")
    field(CALC, "((A>>16)&0xffff)*10010/(4990*1024)")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC0_RAW MS")
    field(EGU, "V")
    field(HIHI, "1")
    field(LOLO, "0")
    field(HIGH, "1")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC0_VCC_1VMGT") {
    field(DESC, "Control Card 1V MGT supply")
    field(CALC, "(A&0xffff)*10010/(4990*1024)")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC0_RAW MS")
    field(EGU, "V")
    field(HIHI, "1")
    field(LOLO, "0")
    field(HIGH, "1")
    field(LOW, "0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC1_RAW") {
    field(DESC, "Control Card FPGA system monitor voltage")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC1_VCC_1V2")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_VCC1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC1_VCC_1V2") {
    field(DESC, "Control Card 1.2V supply")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC1_VCC_2V5")
    field(CALC, "((A>>16)&0xffff)*12010/(4990*1024)")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC1_RAW MS")
    field(EGU, "V")
    field(HIHI, "1")
    field(LOLO, "1")
    field(HIGH, "1")
    field(LOW, "1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC1_VCC_2V5") {
    field(DESC, "Control Card 2.5V supply")
    field(CALC, "(A&0xffff)*25010/(4990*1024)")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC1_RAW MS")
    field(EGU, "V")
    field(HIHI, "2")
    field(LOLO, "2")
    field(HIGH, "2")
    field(LOW, "2")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC2_RAW") {
    field(DESC, "Control Card FPGA system monitor voltage")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC2_VCC_3V3")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MON_VCC2")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC2_VCC_3V3") {
    field(DESC, "Control Card 3.3V supply")
    field(CALC, "(A&0xffff)*33010/(4990*1024)")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_VCC2_RAW MS")
    field(EGU, "V")
    field(HIHI, "3")
    field(LOLO, "3")
    field(HIGH, "3")
    field(LOW, "3")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_RAW") {
    field(DESC, "Frequency check register.")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_CLK_ADC_I")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_FREQ_CHECK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_CLK_REF_I") {
    field(DESC, "Input reference clock frequency status")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_RAW MS")
    field(SHFT, "3")
    field(ZRST, "Frequency error")
    field(ONST, "Frequency OK")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_CLK_ADC_I") {
    field(DESC, "ADC sampling clock frequency status.")
    field(DTYP, "Raw Soft Channel")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_CLK_SER_I")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_RAW MS")
    field(SHFT, "1")
    field(ZRST, "Frequency error")
    field(ONST, "Frequency OK")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_CLK_SER_I") {
    field(DESC, "156 MHz clock frequency status")
    field(DTYP, "Raw Soft Channel")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_CLK_REF_I")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_FREQ_CHECK_RAW MS")
    field(SHFT, "0")
    field(ZRST, "Frequency error")
    field(ONST, "Frequency OK")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_CTRL_RAW") {
    field(DESC, "Control register for onboard 1-wire memo")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_CTRL_CTRL") {
    field(DESC, "Control register for onboard 1-wire memo")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_STATUS_RAW") {
    field(DESC, "Onboard Silicon Serial Number")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_READ_LOW_RAW") {
    field(DESC, "Data read register for onboard memory")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_READ_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_READ_HIGH_RAW") {
    field(DESC, "Data read register for onboard memory")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_READ_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_WRITE_LOW_RAW") {
    field(DESC, "Data register for onboard 1-wire memory")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_WRITE_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_WRITE_LOW_CTRL") {
    field(DESC, "Data register for onboard 1-wire memory")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_WRITE_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_WRITE_HIGH_RAW") {
    field(DESC, "Data register for onboard 1-wire memory")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_WRITE_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MEM_WRITE_HIGH_CTRL") {
    field(DESC, "Data register for onboard 1-wire memory")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_MEM_WRITE_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_JTAG_MUX_CTRL_RAW") {
    field(DESC, "MAX6696 Temperature sensor control.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_JTAG_MUX_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_JTAG_MUX_CTRL_CTRL") {
    field(DESC, "MAX6696 Temperature sensor control.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_CARD_JTAG_MUX_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_JTAG_MUX_STAT_RAW") {
    field(DESC, "MAX6696 Temperature sensor status.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_JTAG_MUX_STAT")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_INTR_RAW") {
    field(DESC, "SHELF interrupt event register.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_INTR_CTRL") {
    field(DESC, "SHELF interrupt event register.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SHELF_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_INTR_MSK_RAW") {
    field(DESC, "SHELF interrupt event enable register.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_INTR_MSK_CTRL") {
    field(DESC, "SHELF interrupt event enable register.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SHELF_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID0_RAW") {
    field(DESC, "Backplane Silicon Serial Number LSB")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_ID0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID1_RAW") {
    field(DESC, "Backplane Silicon Serial Number MSB")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID1_RACK_ID")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_ID1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID1_RACK_ID") {
    field(DESC, "Shelf ID as read from the backplane")
    field(CALC, "((A>>16)&0x3)+1")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID1_RAW MS")
    field(HIHI, "0")
    field(LOLO, "0")
    field(HIGH, "4")
    field(LOW, "1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_CTRL_RAW") {
    field(DESC, "Control register for backplane 1-wire me")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_CTRL_CTRL") {
    field(DESC, "Control register for backplane 1-wire me")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_STATUS_RAW") {
    field(DESC, "Status register for backplane 1-wire mem")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_READ_LOW_RAW") {
    field(DESC, "Data read register for backplane memory")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_READ_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_READ_HIGH_RAW") {
    field(DESC, "Data read register for backplane memory")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_READ_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_WRITE_LOW_RAW") {
    field(DESC, "Data register for backplane 1-wire memor")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_WRITE_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_WRITE_LOW_CTRL") {
    field(DESC, "Data register for backplane 1-wire memor")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_WRITE_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_WRITE_HIGH_RAW") {
    field(DESC, "Data register for backplane 1-wire memor")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_WRITE_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_MEM_WRITE_HIGH_CTRL") {
    field(DESC, "Data register for backplane 1-wire memor")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_SHELF_MEM_WRITE_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_CARD_STATUS_RAW") {
    field(DESC, "Card presence and configured status")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_CARD_STATUS_CONFIGURED_I")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_CARD_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(mbbiDirect, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_CARD_STATUS_CONFIGURED_I") {
    field(DESC, "Indicates if the specified digitiser is ")
    field(DTYP, "Raw Soft Channel")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_CARD_STATUS_PRESENT_I")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_CARD_STATUS_RAW MS")
    field(SHFT, "16")
    field(NOBT, "12")
}

record(mbbiDirect, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_CARD_STATUS_PRESENT_I") {
    field(DESC, "Indicates if the specified digitiser car")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_CARD_STATUS_RAW MS")
    field(SHFT, "0")
    field(NOBT, "12")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_INTR_RAW") {
    field(DESC, "POWER interrupt event register.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_INTR_CTRL") {
    field(DESC, "POWER interrupt event register.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_POWER_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_INTR_MSK_RAW") {
    field(DESC, "POWER interrupt event enable register.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_INTR_MSK_CTRL") {
    field(DESC, "POWER interrupt event enable register.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_POWER_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_RAW") {
    field(DESC, "Control register for shelf power card.")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_ENABLE_I")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_CTRL") {
    field(DESC, "Control register for shelf power card.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_POWER_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_MAN_DISABLE_I") {
    field(DESC, "Disable local control of the power suppl")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_RAW MS")
    field(SHFT, "25")
    field(ZRST, "Supply enabled")
    field(ONST, "Supply disabled")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(bo, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_MAN_DISABLE_O") {
    field(DESC, "Disable local control of the power suppl")
    field(DTYP, "asynUInt32Digital")
    field(OMSL, "supervisory")
    field(OUT, "@asynMask($(PORT),$(ADDR), 0x02000000)CTRL_POWER_CTRL")
    field(ONAM, "Supply disabled")
    field(ZNAM, "Supply enabled")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_ENABLE_I") {
    field(DESC, "Software power supply enable")
    field(DTYP, "Raw Soft Channel")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_MAN_DISABLE_I")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_RAW MS")
    field(SHFT, "24")
    field(ZRST, "Supply disabled")
    field(ONST, "Supply enabled")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(bo, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_CTRL_ENABLE_O") {
    field(DESC, "Software power supply enable")
    field(DTYP, "asynUInt32Digital")
    field(OMSL, "supervisory")
    field(OUT, "@asynMask($(PORT),$(ADDR), 0x01000000)CTRL_POWER_CTRL")
    field(ONAM, "Supply enabled")
    field(ZNAM, "Supply disabled")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_STATUS_RAW") {
    field(DESC, "Shelf power supply status register")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_STATUS_POWER_FAULT_I")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_STATUS_POWER_FAULT_I") {
    field(DESC, "Indicates if the power supply card has a")
    field(DTYP, "Raw Soft Channel")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_STATUS_POWER_STATE_I")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_STATUS_RAW MS")
    field(SHFT, "25")
    field(ZRST, "No fault")
    field(ONST, "Fault detected")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(mbbi, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_STATUS_POWER_STATE_I") {
    field(DESC, "Current status of the rack power supply ")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_STATUS_RAW MS")
    field(SHFT, "24")
    field(ZRST, "Supply disabled")
    field(ONST, "Supply enabled")
    field(NOBT, "1")
    field(ONVL, "1")
    field(ZRVL, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_ID0_RAW") {
    field(DESC, "Power card silicon serial number registe")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_ID")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_ID0")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_ID1_RAW") {
    field(DESC, "Power card silicon serial number registe")
    field(DTYP, "asynInt32")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_ID1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_RAW") {
    field(DESC, "Data outputs for 9.6V supply A power & c")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_VCC_12")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_12VA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_VCC_12") {
    field(DESC, "9.6V supply A output voltage")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_IOUT_12")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_RAW MS")
    field(EGU, "V")
    field(HIHI, "10")
    field(LOLO, "8")
    field(HIGH, "9")
    field(LOW, "9")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_IOUT_12") {
    field(DESC, "9.6V supply A output current")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_PWR")
    field(CALC, "(A&0xffff)*20.0/3")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_RAW MS")
    field(EGU, "mA")
    field(HIHI, "27000")
    field(LOLO, "0")
    field(HIGH, "20000")
    field(LOW, "150")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "50")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_RAW") {
    field(DESC, "Data outputs for 9.6V supply B power & c")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_VCC_12")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_12VB")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_VCC_12") {
    field(DESC, "9.6V supply B output voltage")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_IOUT_12")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_RAW MS")
    field(EGU, "V")
    field(HIHI, "10")
    field(LOLO, "8")
    field(HIGH, "9")
    field(LOW, "9")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_IOUT_12") {
    field(DESC, "9.6V supply B output current")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_PWR")
    field(CALC, "(A&0xffff)*20.0/3")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_RAW MS")
    field(EGU, "mA")
    field(HIHI, "27000")
    field(LOLO, "0")
    field(HIGH, "21000")
    field(LOW, "150")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "50")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_RAW") {
    field(DESC, "Data outputs A for 4V power & current mo")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_VIN_12")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_4VA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_VIN_12") {
    field(DESC, "9.6V input voltage to 4V regulator")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_IIN_12")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_RAW MS")
    field(EGU, "V")
    field(HIHI, "10")
    field(LOLO, "8")
    field(HIGH, "9")
    field(LOW, "9")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_IIN_12") {
    field(DESC, "9.6V input current to 4V regulator")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4V_PWR")
    field(CALC, "(A&0xffff)*2")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_RAW MS")
    field(EGU, "mA")
    field(HIHI, "10000")
    field(LOLO, "0")
    field(HIGH, "8000")
    field(LOW, "80")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "10")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VB_RAW") {
    field(DESC, "Data outputs B for 4V power & current mo")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VB_VCC_4V")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_4VB")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VB_VCC_4V") {
    field(DESC, "4V regulator output voltage")
    field(CALC, "(A&0xffff)*0.002")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VB_RAW MS")
    field(EGU, "V")
    field(HIHI, "4")
    field(LOLO, "3")
    field(HIGH, "4")
    field(LOW, "3")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_RAW") {
    field(DESC, "Data outputs A for 1.7V A power & curren")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_VIN_12")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_1V5AA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_VIN_12") {
    field(DESC, "9.6V input voltage to 1.7V left regulato")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_IIN_12")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_RAW MS")
    field(EGU, "V")
    field(HIHI, "10")
    field(LOLO, "8")
    field(HIGH, "9")
    field(LOW, "9")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_IIN_12") {
    field(DESC, "9.6V input current to 1.7V left regulato")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5A_PWR")
    field(CALC, "(A&0xffff)*2")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_RAW MS")
    field(EGU, "mA")
    field(HIHI, "15800")
    field(LOLO, "0")
    field(HIGH, "5600")
    field(LOW, "100")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "10")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AB_RAW") {
    field(DESC, "Data outputs B for 1.7V A power & curren")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AB_VCC_1V5")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_1V5AB")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AB_VCC_1V5") {
    field(DESC, "1.7V left regulator output voltage")
    field(CALC, "(A&0xffff)*1.499/2000")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AB_RAW MS")
    field(EGU, "V")
    field(HIHI, "2")
    field(LOLO, "1")
    field(HIGH, "1")
    field(LOW, "1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_RAW") {
    field(DESC, "Data outputs A for 5.5V power & current ")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_VIN_12")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_6VA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_VIN_12") {
    field(DESC, "9.6V input voltage to 5.5V regulator")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_IIN_12")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_RAW MS")
    field(EGU, "V")
    field(HIHI, "10")
    field(LOLO, "8")
    field(HIGH, "9")
    field(LOW, "9")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_IIN_12") {
    field(DESC, "9.6V input current to 5.5V regulator")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6V_PWR")
    field(CALC, "(A&0xffff)*2")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_RAW MS")
    field(EGU, "mA")
    field(HIHI, "10000")
    field(LOLO, "0")
    field(HIGH, "400")
    field(LOW, "80")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "10")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VB_RAW") {
    field(DESC, "Data outputs B for 5.5V power & current ")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VB_VCC_6V")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_6VB")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VB_VCC_6V") {
    field(DESC, "5.5V regulator ouput voltage")
    field(CALC, "(A&0xffff)*5.99/2000")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VB_RAW MS")
    field(EGU, "V")
    field(HIHI, "6")
    field(LOLO, "5")
    field(HIGH, "5")
    field(LOW, "5")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_RAW") {
    field(DESC, "Data outputs A for 3.3V power & current ")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_VIN_12")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_3V3A")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_VIN_12") {
    field(DESC, "9.6V input voltage to 3.3V regulator")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_IIN_12")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_RAW MS")
    field(EGU, "V")
    field(HIHI, "10")
    field(LOLO, "8")
    field(HIGH, "9")
    field(LOW, "9")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_IIN_12") {
    field(DESC, "9.6V input current to 3.3V regulator")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3_PWR")
    field(CALC, "(A&0xffff)*2")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_RAW MS")
    field(EGU, "mA")
    field(HIHI, "10000")
    field(LOLO, "0")
    field(HIGH, "2700")
    field(LOW, "80")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "10")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3B_RAW") {
    field(DESC, "Data outputs B for 3.3V power & current ")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3B_VCC_3V3")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_3V3B")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3B_VCC_3V3") {
    field(DESC, "3.3V regulator output voltage")
    field(CALC, "(A&0xffff)*3.32/2000")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3B_RAW MS")
    field(EGU, "V")
    field(HIHI, "3")
    field(LOLO, "3")
    field(HIGH, "3")
    field(LOW, "3")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_RAW") {
    field(DESC, "Data outputs A for 2.5V power & current ")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_VIN_12")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_2V5A")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_VIN_12") {
    field(DESC, "9.6V input voltage to 2.5V regulator")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_IIN_12")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_RAW MS")
    field(EGU, "V")
    field(HIHI, "10")
    field(LOLO, "8")
    field(HIGH, "9")
    field(LOW, "9")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_IIN_12") {
    field(DESC, "9.6V input current to 2.5V regulator")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5_PWR")
    field(CALC, "(A&0xffff)*2")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_RAW MS")
    field(EGU, "mA")
    field(HIHI, "15800")
    field(LOLO, "0")
    field(HIGH, "4300")
    field(LOW, "240")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "10")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5B_RAW") {
    field(DESC, "Data outputs B for 2.5V power & current ")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5B_VCC_2V5")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_2V5B")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5B_VCC_2V5") {
    field(DESC, "2.5V regulator output voltage")
    field(CALC, "(A&0xffff)*2.5/2000")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5B_RAW MS")
    field(EGU, "V")
    field(HIHI, "2")
    field(LOLO, "2")
    field(HIGH, "2")
    field(LOW, "2")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_RAW") {
    field(DESC, "Data outputs A for 1.5V B power & curren")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_VIN_12")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_1V5BA")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_VIN_12") {
    field(DESC, "9.6V input voltage to 1.7V right regulat")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_IIN_12")
    field(CALC, "((A>>16)&0xffff)*0.025")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_RAW MS")
    field(EGU, "V")
    field(HIHI, "10")
    field(LOLO, "8")
    field(HIGH, "9")
    field(LOW, "9")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_IIN_12") {
    field(DESC, "9.6V input current to 1.7V right regulat")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5B_PWR")
    field(CALC, "(A&0xffff)*2")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_RAW MS")
    field(EGU, "mA")
    field(HIHI, "15800")
    field(LOLO, "0")
    field(HIGH, "5600")
    field(LOW, "100")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "10")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BB_RAW") {
    field(DESC, "Data outputs B for 1.5V B power & curren")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BB_VCC_1V5")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MON_1V5BB")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BB_VCC_1V5") {
    field(DESC, "1.7V right regulator ouput voltage")
    field(CALC, "(A&0xffff)*1.499/2000")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BB_RAW MS")
    field(EGU, "V")
    field(HIHI, "2")
    field(LOLO, "1")
    field(HIGH, "1")
    field(LOW, "1")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_CTRL_RAW") {
    field(DESC, "Control register for power card 1-wire m")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_CTRL_CTRL") {
    field(DESC, "Control register for power card 1-wire m")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_STATUS_RAW") {
    field(DESC, "Power Card Silicon Serial Number")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_READ_LOW_RAW") {
    field(DESC, "Data read register for power card memory")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_READ_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_READ_HIGH_RAW") {
    field(DESC, "Data read register for power card memory")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_READ_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_WRITE_LOW_RAW") {
    field(DESC, "Data register for power card 1-wire memo")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_WRITE_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_WRITE_LOW_CTRL") {
    field(DESC, "Data register for power card 1-wire memo")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_WRITE_LOW")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_WRITE_HIGH_RAW") {
    field(DESC, "Data register for power card 1-wire memo")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_WRITE_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MEM_WRITE_HIGH_CTRL") {
    field(DESC, "Data register for power card 1-wire memo")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_POWER_MEM_WRITE_HIGH")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_INTR_RAW") {
    field(DESC, "Event Generator interrupt event register")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_INTR_CTRL") {
    field(DESC, "Event Generator interrupt event register")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_INTR_MSK_RAW") {
    field(DESC, "Event Generator interrupt event enable r")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_INTR_MSK_CTRL") {
    field(DESC, "Event Generator interrupt event enable r")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OMSL, "closed_loop")
    field(DOL, "$(prefix)$(antid)drx:s1:b0:ctrlEventIntrMskInit")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(PINI, "NO")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_EVENTS_INTR_RAW") {
    field(DESC, "Event Generator interrupt event register")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_EVENTS_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_EVENTS_INTR_CTRL") {
    field(DESC, "Event Generator interrupt event register")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_EVENTS_INTR")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_EVENTS_INTR_MSK_RAW") {
    field(DESC, "Event Generator interrupt event enable r")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_EVENTS_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_EVENTS_INTR_MSK_CTRL") {
    field(DESC, "Event Generator interrupt event enable r")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_EVENTS_INTR_MSK")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_CTRL_RAW") {
    field(DESC, "Event Generator control.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_CTRL_CTRL") {
    field(DESC, "Event Generator control.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_STATUS_RAW") {
    field(DESC, "Event Generator status.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_REF_FIFO_LS_RAW") {
    field(DESC, "Event Generator Frame FIFO lower word.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_REF_FIFO_LS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_REF_FIFO_LS_CTRL") {
    field(DESC, "Event Generator Frame FIFO lower word.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_REF_FIFO_LS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_REF_FIFO_MS_RAW") {
    field(DESC, "Event Generator Frame FIFO upper word.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_REF_FIFO_MS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_REF_FIFO_MS_CTRL") {
    field(DESC, "Event Generator Frame FIFO upper word.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_REF_FIFO_MS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_FRAME_FIFO_RAW") {
    field(DESC, "Event Generator BAT capture FIFO.")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_FRAME_FIFO")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(waveform, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_FRAME_FIFO_FRAME_DATA_RAW") {
    field(DESC, "The captured frame data.")
    field(DTYP, "asynInt32ArrayIn")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_FRAME_FIFO_FRAME_DATA")
    field(NELM, "23")
    field(FTVL, "ULONG")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_ASYNC_EVENT_RAW") {
    field(DESC, "Generate asynchronous events.")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_ASYNC_EVENT_EVENTS_I")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_ASYNC_EVENT")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_ASYNC_EVENT_CTRL") {
    field(DESC, "Generate asynchronous events.")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_ASYNC_EVENT")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(mbbiDirect, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_ASYNC_EVENT_EVENTS_I") {
    field(DESC, "The desired event output")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_ASYNC_EVENT_RAW MS")
    field(SHFT, "0")
    field(NOBT, "16")
}

record(mbbo, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_ASYNC_EVENT_EVENTS_O") {
    field(DESC, "The desired event output")
    field(DTYP, "asynUInt32Digital")
    field(OMSL, "supervisory")
    field(OUT, "@asynMask($(PORT),$(ADDR), 0x0000FFFF)CTRL_EVENT_ASYNC_EVENT")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_EVENT_STATUS_RAW") {
    field(DESC, "View the state of the event generator ou")
    field(DTYP, "asynInt32")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_EVENT_STATUS_EVENTS_I")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_EVENT_STATUS")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(mbbiDirect, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_EVENT_STATUS_EVENTS_I") {
    field(DESC, "The 16 bit event bus")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_EVENT_STATUS_RAW MS")
    field(SHFT, "0")
    field(NOBT, "16")
}

record(longin, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_DELAY_CTRL_RAW") {
    field(DESC, "Delay the event outputs")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_EVENT_DELAY_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
}

record(longout, "$(prefix)$(antid)drx:s1:b0:CTRL_EVENT_DELAY_CTRL_CTRL") {
    field(DESC, "Delay the event outputs")
    field(DTYP, "asynInt32")
    field(OMSL, "supervisory")
    field(OUT, "@asyn($(PORT),$(ADDR))CTRL_EVENT_DELAY_CTRL")
    field(HHSV, "NO_ALARM")
    field(LLSV, "NO_ALARM")
    field(HSV, "NO_ALARM")
    field(LSV, "NO_ALARM")
    field(HYST, "0")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_MON_48V_PWR") {
    field(DESC, "Total power dissipation by the control c")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_VCC_IN MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_MON_48V_VCC_AMPS MS")
    field(EGU, "W")
    field(HIHI, "10")
    field(LOLO, "5")
    field(HIGH, "8")
    field(LOW, "6")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.1")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_PWR") {
    field(DESC, "Total output power of the 48V to 12V bus")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_PWR")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_VCC_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_IOUT_12 MS")
    field(EGU, "W")
    field(HIHI, "240")
    field(LOLO, "1")
    field(HIGH, "190")
    field(LOW, "1.5")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.5")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_PWR") {
    field(DESC, "Total output power of the 48V to 12V bus")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_VCC_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_IOUT_12 MS")
    field(EGU, "W")
    field(HIHI, "240")
    field(LOLO, "4")
    field(HIGH, "230")
    field(LOW, "5")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.5")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5A_PWR") {
    field(DESC, "Total input power to the 1.7V left regul")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_VIN_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AA_IIN_12 MS")
    field(EGU, "W")
    field(HIHI, "100")
    field(LOLO, "0.5")
    field(HIGH, "75")
    field(LOW, "1")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.25")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5B_PWR") {
    field(DESC, "Total input power to the 1.7V right regu")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_VIN_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5BA_IIN_12 MS")
    field(EGU, "W")
    field(HIHI, "100")
    field(LOLO, "0.5")
    field(HIGH, "75")
    field(LOW, "1")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.25")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5_PWR") {
    field(DESC, "Total input power to the 2.5V regulator")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_VIN_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_2V5A_IIN_12 MS")
    field(EGU, "W")
    field(HIHI, "100")
    field(LOLO, "1")
    field(HIGH, "60")
    field(LOW, "2")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.25")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3_PWR") {
    field(DESC, "Total input power to the 3.3V regulator")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_VIN_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_3V3A_IIN_12 MS")
    field(EGU, "W")
    field(HIHI, "88")
    field(LOLO, "0")
    field(HIGH, "40")
    field(LOW, "0.5")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.1")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4V_PWR") {
    field(DESC, "Total input power to the 4V regulator")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_VIN_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_4VA_IIN_12 MS")
    field(EGU, "W")
    field(HIHI, "88")
    field(LOLO, "0")
    field(HIGH, "75")
    field(LOW, "0.5")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.1")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6V_PWR") {
    field(DESC, "Total input power to the 6V regulator")
    field(CALC, "A*B/1000.0")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_VIN_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_6VA_IIN_12 MS")
    field(EGU, "W")
    field(HIHI, "88")
    field(LOLO, "0")
    field(HIGH, "5")
    field(LOW, "0.5")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "0.1")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_PWR") {
    field(DESC, "Total power dissipation of the digitiser")
    field(FLNK, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5A_IOUT")
    field(CALC, "A+B+C")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_PWR MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VB_PWR MS")
    field(INPC, "$(prefix)$(antid)drx:s1:b0:CTRL_MON_48V_PWR MS")
    field(EGU, "W")
    field(HIHI, "450")
    field(LOLO, "10")
    field(HIGH, "440")
    field(LOW, "14")
    field(HHSV, "MAJOR")
    field(LLSV, "MAJOR")
    field(HSV, "MINOR")
    field(LSV, "MINOR")
    field(HYST, "4")
}

record(aSub, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID") {
    field(DESC, "Unique 48-bit serial number of the backp")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID0_RAW MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_ID1_RAW MS")
    field(FTA, "LONG")
    field(FTB, "LONG")
    field(FTVA, "STRING")
    field(FTVB, "SHORT")
    field(SNAM, "drx_decode_serial")
}

record(stringin, "$(prefix)$(antid)drx:s1:b0:CTRL_SHELF_SN_RAW") {
    field(DESC, "Barcoded serial number of the backplane ")
    field(DTYP, "asynOctetRead")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_SHELF_SN")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(aSub, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_ID") {
    field(DESC, "Unique 48-bit serial number of the backp")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_ID0_RAW MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_ID1_RAW MS")
    field(FTA, "LONG")
    field(FTB, "LONG")
    field(FTVA, "STRING")
    field(FTVB, "SHORT")
    field(SNAM, "drx_decode_serial")
}

record(stringin, "$(prefix)$(antid)drx:s1:b0:CTRL_CARD_SN_RAW") {
    field(DESC, "Barcoded serial number of the backplane ")
    field(DTYP, "asynOctetRead")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_CARD_SN")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(aSub, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_ID") {
    field(DESC, "Unique 48-bit serial number of the backp")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_ID0_RAW MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_ID1_RAW MS")
    field(FTA, "LONG")
    field(FTB, "LONG")
    field(FTVA, "STRING")
    field(FTVB, "SHORT")
    field(SNAM, "drx_decode_serial")
}

record(stringin, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_SN_RAW") {
    field(DESC, "Barcoded serial number of the backplane ")
    field(DTYP, "asynOctetRead")
    field(SCAN, "Event")
    field(INP, "@asyn($(PORT),$(ADDR))CTRL_POWER_SN")
    field(SIML, "$(prefix)$(antid)drx:s1:b0:drxControlSimMode")
}

record(calc, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5A_IOUT") {
    field(DESC, "Output current from the 1.7V left regula")
    field(CALC, "A*B*C/D")
    field(INPA, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_VCC_12 MS")
    field(INPB, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_12VA_IOUT_12 MS")
    field(INPC, "$(prefix)$(antid)drx:s1:b0:0.85_RAW MS")
    field(INPD, "$(prefix)$(antid)drx:s1:b0:CTRL_POWER_MON_1V5AB_VCC_1V5 MS")
    field(EGU, "mA")
}

