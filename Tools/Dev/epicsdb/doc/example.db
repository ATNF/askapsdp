#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../src/O.Common/pwr.dbd")
#! DBDEND


record(bo, "pwr:do01Enable") {
  field(DESC, "Set digital output 01 on/off")
  field(DTYP, "asynUInt32Digital")
  field(FLNK, "pwr:interlCalc")
  field(OMSL, "supervisory")
  field(OUT, "@asynMask(PWR_DO_OUT01 0 0x1)")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bo, "pwr:do02Enable") {
  field(DESC, "Set digital output 02 on/off")
  field(DTYP, "asynUInt32Digital")
  field(FLNK, "pwr:interlCalc")
  field(OMSL, "supervisory")
  field(OUT, "@asynMask(PWR_DO_OUT02 0 0x1)")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bo, "pwr:do03Enable") {
  field(DESC, "Set digital output 03 on/off")
  field(DTYP, "asynUInt32Digital")
  field(FLNK, "pwr:interlCalc")
  field(OMSL, "supervisory")
  field(OUT, "@asynMask(PWR_DO_OUT03 0 0x1)")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bo, "pwr:do04Enable") {
  field(DESC, "Set digital output 04 on/off")
  field(DTYP, "asynUInt32Digital")
  field(FLNK, "pwr:interlCalc")
  field(OMSL, "supervisory")
  field(OUT, "@asynMask(PWR_DO_OUT04 0 0x1)")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bo, "pwr:do05Enable") {
  field(DESC, "Set digital output 05 on/off")
  field(DTYP, "asynUInt32Digital")
  field(OMSL, "supervisory")
  field(OUT, "@asynMask(PWR_DO_OUT05 0 0x1)")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bo, "pwr:interlock") {
  field(DESC, "Disable power enable for 5s")
  field(FLNK, "pwr:interFan2")
  field(DOL, "pwr:interlCalc")
}

record(dfanout, "pwr:interFan") {
  field(OUTA, "pwr:do01Enable.DISA")
  field(OUTB, "pwr:do02Enable.DISA")
  field(OUTC, "pwr:do03Enable.DISA")
  field(OUTD, "pwr:do04Enable.DISA")
  field(OUTE, "pwr:do05Enable.DISA")
  field(DOL, "pwr:interlock")
}

record(calc, "pwr:interlCalc") {
  field(FLNK, "pwr:interlock")
  field(CALC, "(A|B|C|D)")
  field(INPA, "pwr:do01Enable")
  field(INPB, "pwr:do02Enable")
  field(INPC, "pwr:do03Enable")
  field(INPD, "pwr:do04Enable")
}

record(calcout, "pwr:interCalcOut") {
  field(FLNK, "pwr:interFan")
  field(OUT, "pwr:interlock.VAL")
  field(OOPT, "Every Time")
  field(ODLY, "5.0")
  field(DOPT, "Use OCAL")
}

#$ HIDE_PV
record(fanout, "pwr:interFan2") {
  field(FLNK, "pwr:interFan")
  field(LNK1, "pwr:interCalcOut")
}

# When val = 1 there is a major alarm active in the PSU.
record(bi, "pwr:majorAlarmSum") {
  field(DESC, "major alarms summary bit")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynUInt32Digital")
  field(FLNK, "pwr:critMajorSum")
  field(INP, "@asynMask(PWR_DI_MAJ_SUM 0 0x1)")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(ZNAM, "OFF")
  field(ONAM, "PSU_MAJOR_ALARM")
}

# When val = 1 a minor alarm is active in the PSU.
record(bi, "pwr:minorAlarmSum") {
  field(DESC, "minor alarms summary bit")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynUInt32Digital")
  field(FLNK, "pwr:warnMinorSum")
  field(INP, "@asynMask(PWR_DI_MIN_SUM 0 0x1)")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(ZNAM, "OFF")
  field(ONAM, "PSU_MINOR_ALARM")
}

# When val = 1 there is a critical alarm active in the psu.
record(bi, "pwr:critAlarmSum") {
  field(DESC, "critical alarms summary bit")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynUInt32Digital")
  field(FLNK, "pwr:critMajorSum")
  field(INP, "@asynMask(PWR_DI_CRIT_SUM 0 0x1)")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(ZNAM, "OFF")
  field(ONAM, "PSU_CRITICAL_ALARM")
}

# When val = 1 a warning is active in the PSU.
record(bi, "pwr:warningAlarmSum") {
  field(DESC, "warnings summary bit")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynUInt32Digital")
  field(FLNK, "pwr:warnMinorSum")
  field(INP, "@asynMask(PWR_DI_WARN_SUM 0 0x1)")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(ZNAM, "OFF")
  field(ONAM, "PSU_WARNING")
}

# Asserts major alarm state when the PSU has a major or critical alarm active.
record(bi, "pwr:alarmSummaryMajor") {
  field(DESC, "Alert for major or critical alarms")
  field(SCAN, "Passive")
  field(INP, "pwr:critMajorSum.VAL")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
  field(ZNAM, "OFF")
  field(ONAM, "PSU_MAJOR_ALARM")
}

# combine state of input records
record(calc, "pwr:warnMinorSum") {
  field(DESC, "critical/major alarm summary")
  field(FLNK, "pwr:alarmSummaryMinor")
  field(CALC, "A|B")
  field(INPA, "pwr:minorAlarmSum")
  field(INPB, "pwr:warningAlarmSum")
}

# Combine state of input records.
record(calc, "pwr:critMajorSum") {
  field(DESC, "critical/major alarm summary")
  field(FLNK, "pwr:alarmSummaryMajor")
  field(CALC, "A|B")
  field(INPA, "pwr:critAlarmSum")
  field(INPB, "pwr:majorAlarmSum")
}

# Asserts minor alarm state when the PSU has a warning or minor alarm active.
record(bi, "pwr:alarmSummaryMinor") {
  field(DESC, "Alert for minor alarms or warnings.")
  field(SCAN, "Passive")
  field(INP, "pwr:warnMinorSum")
  field(ZSV, "NO_ALARM")
  field(OSV, "MINOR")
  field(ZNAM, "OFF")
  field(ONAM, "PSU_MINOR_ALARM")
}

# List of alarm names in PSU. The Eaton only returns 20 names at once so the alarm names list is split.
# This record is loaded at initialisation only, in order to minimise SNMP traffic.
record(waveform, "pwr:alarmNames01") {
  field(DESC, "List of alarm names via SNMP part 1")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Name STRING: 40")
  field(NELM, "10")
  field(FTVL, "STRING")
}

# List of alarm names in PSU. The Eaton only returns 20 names at once so the alarm names list is split.
# This record is loaded at initialisation only, in order to minimise SNMP traffic.
record(waveform, "pwr:alarmNames02") {
  field(DESC, "List of alarm names via SNMP part 2")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Name.9 STRING: 40")
  field(NELM, "10")
  field(FTVL, "STRING")
}

# List of alarm names in PSU. The Eaton only returns 20 names at once so the alarm names list is split.
# This record is loaded at initialisation only, in order to minimise SNMP traffic.
record(waveform, "pwr:alarmNames03") {
  field(DESC, "List of alarm names via SNMP part 3")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Name.19 STRING: 40")
  field(NELM, "10")
  field(FTVL, "STRING")
}

# List of alarm severity values in PSU. The Eaton only returns 20 values at once so the alarm severity list is split.
# This record is loaded at initialisation only, in order to minimise SNMP traffic.
record(waveform, "pwr:alarmSeverity01") {
  field(DESC, "List of alarm severities via SNMP part 1")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Severity INTEGER: 25")
  field(NELM, "10")
  field(FTVL, "LONG")
}

# List of alarm severity values in PSU. The Eaton only returns 20 values at once so the alarm severity list is split.
# This record is loaded at initialisation only, in order to minimise SNMP traffic.
record(waveform, "pwr:alarmSeverity02") {
  field(DESC, "List of alarm severities via SNMP part 2")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Severity.9 INTEGER: 25")
  field(NELM, "10")
  field(FTVL, "LONG")
}

# List of alarm severity values in PSU. The Eaton only returns 20 values at once so the alarm severity list is split.
# This record is loaded at initialisation only, in order to minimise SNMP traffic.
record(waveform, "pwr:alarmSeverity03") {
  field(DESC, "List of alarm severities via SNMP part 3")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Severity.19 INTEGER: 25")
  field(NELM, "10")
  field(FTVL, "LONG")
}

# The state of each alarm bit in the  PSU.
# This record is not made active until the SNMP records have been initialised
record(waveform, "pwr:activeAlarms") {
  field(DESC, "list of active alarms")
  field(SCAN, "Passive")
  field(DTYP, "asynInt32ArrayIn")
  field(FLNK, "pwr:alarmCheck")
  field(INP, "@asyn(PWR_DI_ALRM2 0)MODBUS_DATA")
  field(NELM, "59")
  field(FTVL, "LONG")
}

record(aSub, "pwr:alarmCheck") {
  field(DESC, "Check alarm states and list active")
  field(SCAN, "Passive")
  field(INPA, "pwr:alarmNames01")
  field(INPB, "pwr:alarmNames02")
  field(INPC, "pwr:alarmNames03")
  field(INPD, "pwr:alarmNames04")
  field(INPE, "pwr:alarmNames05")
  field(INPF, "pwr:alarmNames06")
  field(INPG, "pwr:alarmSeverity01")
  field(FTA, "STRING")
  field(FTB, "STRING")
  field(FTC, "STRING")
  field(FTD, "STRING")
  field(FTE, "STRING")
  field(FTF, "STRING")
  field(FTG, "LONG")
  field(NOA, "10")
  field(NOB, "10")
  field(NOC, "10")
  field(NOD, "10")
  field(NOE, "10")
  field(NOF, "9")
  field(NOG, "10")
  field(FTVA, "STRING")
  field(FTVB, "STRING")
  field(FTVC, "LONG")
  field(SNAM, "pwr_process_alarm_list")
  field(INPH, "pwr:alarmSeverity02")
  field(FTH, "LONG")
  field(FTVD, "LONG")
  field(NOVB, "59")
  field(INPI, "pwr:alarmSeverity03")
  field(INPJ, "pwr:alarmSeverity04")
  field(INPK, "pwr:alarmSeverity05")
  field(INPL, "pwr:alarmSeverity06")
  field(INPM, "pwr:activeAlarms")
  field(INPN, "9")
  field(FTI, "LONG")
  field(FTJ, "LONG")
  field(FTK, "LONG")
  field(FTL, "LONG")
  field(FTM, "LONG")
  field(NOH, "10")
  field(NOI, "10")
  field(NOJ, "10")
  field(NOK, "10")
  field(NOL, "9")
  field(NOM, "59")
  field(NOVA, "59")
  field(FLNK, "pwr:activeAlarmNames")
  field(FTN, "LONG")
  field(OUTC, "pwr:acFailActive PP")
}

expand("di-state.vdb", di-state01) {
  macro(DINUM, "01")
  macro(OFFSET, "0")
}

expand("di-state.vdb", di-state02) {
  macro(DINUM, "02")
  macro(OFFSET, "1")
}

expand("di-state.vdb", di-state03) {
  macro(DINUM, "03")
  macro(OFFSET, "2")
}

expand("di-state.vdb", di-state04) {
  macro(DINUM, "04")
  macro(OFFSET, "3")
}

expand("di-state.vdb", di-state05) {
  macro(DINUM, "05")
  macro(OFFSET, "4")
}

record(waveform, "pwr:alarmNames04") {
  field(DESC, "List of alarm names via SNMP part 4")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Name.29 STRING: 40")
  field(NELM, "10")
  field(FTVL, "STRING")
}

record(waveform, "pwr:alarmNames05") {
  field(DESC, "List of alarm names via SNMP part 5")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Name.39 STRING: 40")
  field(NELM, "10")
  field(FTVL, "STRING")
}

record(waveform, "pwr:alarmNames06") {
  field(DESC, "List of alarm names via SNMP part 6")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Name.49 STRING: 40")
  field(NELM, "9")
  field(FTVL, "STRING")
}


record(waveform, "pwr:alarmSeverity04") {
  field(DESC, "List of alarm severities via SNMP part 4")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Severity.29 INTEGER: 25")
  field(NELM, "10")
  field(FTVL, "LONG")
}

record(waveform, "pwr:alarmSeverity05") {
  field(DESC, "List of alarm severities via SNMP part 5")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Severity.39 INTEGER: 25")
  field(NELM, "10")
  field(FTVL, "LONG")
}


record(waveform, "pwr:alarmSeverity06") {
  field(DESC, "List of alarm severities via SNMP part 6")
  field(SCAN, "Passive")
  field(DTYP, "Snmp")
  field(INP, "@$(HOST) public RPS-SC200-MIB::alarm-Severity.49 INTEGER: 25")
  field(NELM, "9")
  field(FTVL, "LONG")
}

# The system bus voltage from the bus voltage sensor.
record(ai, "pwr:busVoltage") {
  field(DESC, "DC bus voltage")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 0)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "V")
  field(HIHI, "60")
  field(LOLO, "45")
  field(HIGH, "57")
  field(LOW, "47.9")
}

# The total current flowing to/from the batteries.
record(ai, "pwr:batteryCurrent") {
  field(DESC, "Battery charge/discharge current")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 2)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "A")
}

# The total current drawn by all loads.
record(ai, "pwr:loadCurrent") {
  field(DESC, "Load current")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 4)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "A")
}

# The total current output by all rectifiers.
record(ai, "pwr:rectifierCurrent") {
  field(DESC, "Rectifier current")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 6)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "A")
}

# The power being supplied to the load.
record(ai, "pwr:loadPower") {
  field(DESC, "Load power")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 8)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "kW")
}

# The average of all analog inputs configured as battery temperature inputs.
record(ai, "pwr:batteryTemp") {
  field(DESC, "Battery temperature")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 10)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "C")
}

# The output power of the system as a percentage of the total nominal power of the registered rectifiers
record(ai, "pwr:systemPower") {
  field(DESC, "System power % of max")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 12)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "%")
}

# Sum of reported rectifier currents.
record(ai, "pwr:rectifierCurrentSum") {
  field(DESC, "rectifier current sum")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 14)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "A")
}

# The average of the AC voltage measured by all rectifiers.
record(ai, "pwr:acVoltage") {
  field(DESC, "AC voltage")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL1 16)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "V")
}

record(ai, "pwr:rackTemp") {
  field(DESC, "rack temperature")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(PWR_REG_AIVAL2 18)FLOAT32_BE")
  field(PREC, "2")
  field(EGU, "C")
}

record(ao, "pwr:rackTempHighThreshold") {
  field(DESC, "Rack temp high threshold")
  field(DTYP, "Snmp")
  field(OUT, "@$(HOST) private RPS-SC200-MIB::high-Threshold.10 INTEGER: 25")
  field(OMSL, "supervisory")
  field(PREC, "2")
  field(LINR, "SLOPE")
  field(EGU, "C")
  field(ESLO, ".01")
  field(HOPR, "100")
  field(LOPR, "0")
}

record(waveform, "pwr:activeAlarmNames") {
  field(DESC, "list of active alarm names")
  field(DTYP, "Soft Channel")
  field(INP, "pwr:alarmCheck.VALA")
  field(NELM, "59")
  field(FTVL, "STRING")
}


record(mbbi, "pwr:state") {
  field(DESC, "Current PSU IOC state")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "OFF")
  field(ONST, "INITIALISING")
  field(TWST, "ONLINE")
}

record(stringin, "pwr:subState") {
  field(DESC, "Current PSU IOC substate")
}

record(bo, "pwr:cmdStart") {
  field(DESC, "Connect to hardware and run to Standby")
  field(ONAM, "START")
}

record(bo, "pwr:cmdStop") {
  field(DESC, "Turn off contacters and comms")
}

record(bo, "pwr:cmdRun") {
  field(DESC, "Turn on contacters and set Online state")
}

record(longin, "pwr:majorVers") {
  field(DESC, "PSU software major version")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn(PWR_REG_VERS 0)INT16")
}

record(longin, "pwr:minorVers") {
  field(DESC, "PSU software minor version")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn(PWR_REG_VERS 1)INT16")
}

record(longin, "pwr:modbusVers") {
  field(DESC, "PSU modbus software version")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn(PWR_REG_VERS 2)INT16")
}

record(longin, "pwr:numRectifiers") {
  field(DESC, "Number of registered rectifiers")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn(PWR_REG_RECT 0)INT16")
}

record(longin, "pwr:serialNumber") {
  field(DESC, "PSU serial number")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn(PWR_REG_SERL 0)INT32_BE")
}

record(stringin, "pwr:lastError") {
  field(DESC, "Current PSU IOC error")
}


record(bi, "pwr:acFailActive") {
  field(DESC, "Indicate AC fail is active")
  field(SCAN, "Passive")
  field(OSV, "MAJOR")
  field(ZNAM, "AC OK")
  field(ONAM, "AC FAIL")
}

#! Further lines contain data used by VisualDCT
#! View(5597,3994,1.5)
#! Record("pwr:do01Enable",1300,1740,0,1,"pwr:do01Enable")
#! Field("pwr:do01Enable.DISA",16777215,0,"pwr:do01Enable.DISA")
#! Field("pwr:do01Enable.VAL",16777215,1,"pwr:do01Enable.VAL")
#! Field("pwr:do01Enable.FLNK",16777215,1,"pwr:do01Enable.FLNK")
#! Link("pwr:do01Enable.FLNK","pwr:interlCalc")
#! Record("pwr:do02Enable",1540,1740,0,1,"pwr:do02Enable")
#! Field("pwr:do02Enable.DISA",16777215,1,"pwr:do02Enable.DISA")
#! Field("pwr:do02Enable.VAL",16777215,1,"pwr:do02Enable.VAL")
#! Field("pwr:do02Enable.FLNK",16777215,1,"pwr:do02Enable.FLNK")
#! Link("pwr:do02Enable.FLNK","pwr:interlCalc")
#! Record("pwr:do03Enable",1780,1740,0,1,"pwr:do03Enable")
#! Field("pwr:do03Enable.DISA",16777215,0,"pwr:do03Enable.DISA")
#! Field("pwr:do03Enable.VAL",16777215,0,"pwr:do03Enable.VAL")
#! Field("pwr:do03Enable.FLNK",16777215,1,"pwr:do03Enable.FLNK")
#! Link("pwr:do03Enable.FLNK","pwr:interlCalc")
#! Record("pwr:do04Enable",2000,1740,0,1,"pwr:do04Enable")
#! Field("pwr:do04Enable.DISA",16777215,0,"pwr:do04Enable.DISA")
#! Field("pwr:do04Enable.VAL",16777215,1,"pwr:do04Enable.VAL")
#! Field("pwr:do04Enable.FLNK",16777215,0,"pwr:do04Enable.FLNK")
#! Link("pwr:do04Enable.FLNK","pwr:interlCalc")
#! Record("pwr:do05Enable",2220,1753,0,1,"pwr:do05Enable")
#! Field("pwr:do05Enable.DISA",16777215,0,"pwr:do05Enable.DISA")
#! Record("pwr:interlock",1300,2362,0,1,"pwr:interlock")
#! Field("pwr:interlock.VAL",16777215,1,"pwr:interlock.VAL")
#! Field("pwr:interlock.DOL",16777215,1,"pwr:interlock.DOL")
#! Link("pwr:interlock.DOL","pwr:interlCalc.VAL")
#! Field("pwr:interlock.FLNK",16777215,1,"pwr:interlock.FLNK")
#! Link("pwr:interlock.FLNK","pwr:interFan2")
#! Record("pwr:interFan",1300,2041,0,1,"pwr:interFan")
#! Field("pwr:interFan.OUTA",16777215,0,"pwr:interFan.OUTA")
#! Link("pwr:interFan.OUTA","pwr:do01Enable.DISA")
#! Field("pwr:interFan.DOL",16777215,0,"pwr:interFan.DOL")
#! Link("pwr:interFan.DOL","pwr:interlock.VAL")
#! Field("pwr:interFan.OUTB",16777215,1,"pwr:interFan.OUTB")
#! Link("pwr:interFan.OUTB","pwr:do02Enable.DISA")
#! Field("pwr:interFan.OUTC",16777215,1,"pwr:interFan.OUTC")
#! Link("pwr:interFan.OUTC","pwr:do03Enable.DISA")
#! Field("pwr:interFan.OUTD",16777215,1,"pwr:interFan.OUTD")
#! Link("pwr:interFan.OUTD","pwr:do04Enable.DISA")
#! Field("pwr:interFan.OUTE",16777215,1,"pwr:interFan.OUTE")
#! Link("pwr:interFan.OUTE","pwr:do05Enable.DISA")
#! Record("pwr:interlCalc",1980,2281,0,1,"pwr:interlCalc")
#! Field("pwr:interlCalc.INPA",16777215,0,"pwr:interlCalc.INPA")
#! Link("pwr:interlCalc.INPA","pwr:do01Enable.VAL")
#! Field("pwr:interlCalc.INPB",16777215,0,"pwr:interlCalc.INPB")
#! Link("pwr:interlCalc.INPB","pwr:do02Enable.VAL")
#! Field("pwr:interlCalc.INPC",16777215,0,"pwr:interlCalc.INPC")
#! Link("pwr:interlCalc.INPC","pwr:do03Enable.VAL")
#! Field("pwr:interlCalc.INPD",16777215,1,"pwr:interlCalc.INPD")
#! Link("pwr:interlCalc.INPD","pwr:do04Enable.VAL")
#! Field("pwr:interlCalc.VAL",16777215,0,"pwr:interlCalc.VAL")
#! Field("pwr:interlCalc.FLNK",16777215,0,"pwr:interlCalc.FLNK")
#! Link("pwr:interlCalc.FLNK","pwr:interlock")
#! Record("pwr:interCalcOut",2300,2014,0,0,"pwr:interCalcOut")
#! Field("pwr:interCalcOut.OUT",16777215,0,"pwr:interCalcOut.OUT")
#! Link("pwr:interCalcOut.OUT","pwr:interlock.VAL")
#! Field("pwr:interCalcOut.FLNK",16777215,0,"pwr:interCalcOut.FLNK")
#! Link("pwr:interCalcOut.FLNK","pwr:interFan")
#! Record("pwr:interFan2",1600,2216,0,0,"pwr:interFan2")
#! Field("pwr:interFan2.FLNK",16777215,0,"pwr:interFan2.FLNK")
#! Link("pwr:interFan2.FLNK","pwr:interFan")
#! Field("pwr:interFan2.LNK1",16777215,1,"pwr:interFan2.LNK1")
#! Link("pwr:interFan2.LNK1","pwr:interCalcOut")
#! Record("pwr:majorAlarmSum",3700,1460,0,1,"pwr:majorAlarmSum")
#! Field("pwr:majorAlarmSum.VAL",16777215,1,"pwr:majorAlarmSum.VAL")
#! Field("pwr:majorAlarmSum.FLNK",16777215,1,"pwr:majorAlarmSum.FLNK")
#! Link("pwr:majorAlarmSum.FLNK","pwr:critMajorSum")
#! Record("pwr:minorAlarmSum",3480,1720,0,1,"pwr:minorAlarmSum")
#! Field("pwr:minorAlarmSum.VAL",16777215,1,"pwr:minorAlarmSum.VAL")
#! Field("pwr:minorAlarmSum.FLNK",16777215,1,"pwr:minorAlarmSum.FLNK")
#! Link("pwr:minorAlarmSum.FLNK","pwr:warnMinorSum")
#! Record("pwr:critAlarmSum",3480,1460,0,1,"pwr:critAlarmSum")
#! Field("pwr:critAlarmSum.VAL",16777215,1,"pwr:critAlarmSum.VAL")
#! Field("pwr:critAlarmSum.FLNK",16777215,1,"pwr:critAlarmSum.FLNK")
#! Link("pwr:critAlarmSum.FLNK","pwr:critMajorSum")
#! Record("pwr:warningAlarmSum",3700,1720,0,1,"pwr:warningAlarmSum")
#! Field("pwr:warningAlarmSum.VAL",16777215,1,"pwr:warningAlarmSum.VAL")
#! Field("pwr:warningAlarmSum.FLNK",16777215,1,"pwr:warningAlarmSum.FLNK")
#! Link("pwr:warningAlarmSum.FLNK","pwr:warnMinorSum")
#! Record("pwr:alarmSummaryMajor",4300,1467,0,0,"pwr:alarmSummaryMajor")
#! Field("pwr:alarmSummaryMajor.INP",16777215,0,"pwr:alarmSummaryMajor.INP")
#! Link("pwr:alarmSummaryMajor.INP","pwr:critMajorSum.VAL")
#! Record("pwr:warnMinorSum",3960,1734,0,1,"pwr:warnMinorSum")
#! Field("pwr:warnMinorSum.INPA",16777215,0,"pwr:warnMinorSum.INPA")
#! Link("pwr:warnMinorSum.INPA","pwr:minorAlarmSum.VAL")
#! Field("pwr:warnMinorSum.INPB",16777215,0,"pwr:warnMinorSum.INPB")
#! Link("pwr:warnMinorSum.INPB","pwr:warningAlarmSum.VAL")
#! Field("pwr:warnMinorSum.VAL",16777215,1,"pwr:warnMinorSum.VAL")
#! Field("pwr:warnMinorSum.FLNK",16777215,1,"pwr:warnMinorSum.FLNK")
#! Link("pwr:warnMinorSum.FLNK","pwr:alarmSummaryMinor")
#! Record("pwr:critMajorSum",3960,1454,0,1,"pwr:critMajorSum")
#! Field("pwr:critMajorSum.INPA",16777215,0,"pwr:critMajorSum.INPA")
#! Link("pwr:critMajorSum.INPA","pwr:critAlarmSum.VAL")
#! Field("pwr:critMajorSum.INPB",16777215,0,"pwr:critMajorSum.INPB")
#! Link("pwr:critMajorSum.INPB","pwr:majorAlarmSum.VAL")
#! Field("pwr:critMajorSum.VAL",16777215,1,"pwr:critMajorSum.VAL")
#! Field("pwr:critMajorSum.FLNK",16777215,1,"pwr:critMajorSum.FLNK")
#! Link("pwr:critMajorSum.FLNK","pwr:alarmSummaryMajor")
#! Record("pwr:alarmSummaryMinor",4280,1747,0,0,"pwr:alarmSummaryMinor")
#! Field("pwr:alarmSummaryMinor.INP",16777215,0,"pwr:alarmSummaryMinor.INP")
#! Link("pwr:alarmSummaryMinor.INP","pwr:warnMinorSum.VAL")
#! Record("pwr:alarmNames01",3460,2341,0,1,"pwr:alarmNames01")
#! Field("pwr:alarmNames01.VAL",16777215,1,"pwr:alarmNames01.VAL")
#! Record("pwr:alarmNames02",3460,2521,0,0,"pwr:alarmNames02")
#! Field("pwr:alarmNames02.VAL",16777215,1,"pwr:alarmNames02.VAL")
#! Record("pwr:alarmNames03",3460,2701,0,0,"pwr:alarmNames03")
#! Field("pwr:alarmNames03.VAL",16777215,1,"pwr:alarmNames03.VAL")
#! Record("pwr:alarmSeverity01",4020,2641,0,0,"pwr:alarmSeverity01")
#! Field("pwr:alarmSeverity01.VAL",16777215,1,"pwr:alarmSeverity01.VAL")
#! Record("pwr:alarmSeverity02",4200,2661,0,1,"pwr:alarmSeverity02")
#! Field("pwr:alarmSeverity02.VAL",16777215,0,"pwr:alarmSeverity02.VAL")
#! Record("pwr:alarmSeverity03",4380,2681,0,0,"pwr:alarmSeverity03")
#! Field("pwr:alarmSeverity03.VAL",16777215,0,"pwr:alarmSeverity03.VAL")
#! Record("pwr:activeAlarms",5100,2747,0,1,"pwr:activeAlarms")
#! Field("pwr:activeAlarms.FLNK",16777215,0,"pwr:activeAlarms.FLNK")
#! Link("pwr:activeAlarms.FLNK","pwr:alarmCheck")
#! Field("pwr:activeAlarms.VAL",16777215,0,"pwr:activeAlarms.VAL")
#! Record("pwr:alarmCheck",3780,1948,0,1,"pwr:alarmCheck")
#! Field("pwr:alarmCheck.INPA",16777215,0,"pwr:alarmCheck.INPA")
#! Link("pwr:alarmCheck.INPA","pwr:alarmNames01.VAL")
#! Field("pwr:alarmCheck.INPB",16777215,0,"pwr:alarmCheck.INPB")
#! Link("pwr:alarmCheck.INPB","pwr:alarmNames02.VAL")
#! Field("pwr:alarmCheck.INPC",16777215,0,"pwr:alarmCheck.INPC")
#! Link("pwr:alarmCheck.INPC","pwr:alarmNames03.VAL")
#! Field("pwr:alarmCheck.INPD",16777215,0,"pwr:alarmCheck.INPD")
#! Link("pwr:alarmCheck.INPD","pwr:alarmNames04.VAL")
#! Field("pwr:alarmCheck.INPE",16777215,0,"pwr:alarmCheck.INPE")
#! Link("pwr:alarmCheck.INPE","pwr:alarmNames05.VAL")
#! Field("pwr:alarmCheck.INPF",16777215,0,"pwr:alarmCheck.INPF")
#! Link("pwr:alarmCheck.INPF","pwr:alarmNames06.VAL")
#! Field("pwr:alarmCheck.INPG",16777215,1,"pwr:alarmCheck.INPG")
#! Link("pwr:alarmCheck.INPG","pwr:alarmSeverity01.VAL")
#! Field("pwr:alarmCheck.INPH",16777215,1,"pwr:alarmCheck.INPH")
#! Link("pwr:alarmCheck.INPH","pwr:alarmSeverity02.VAL")
#! Field("pwr:alarmCheck.INPI",16777215,1,"pwr:alarmCheck.INPI")
#! Link("pwr:alarmCheck.INPI","pwr:alarmSeverity03.VAL")
#! Field("pwr:alarmCheck.INPJ",16777215,1,"pwr:alarmCheck.INPJ")
#! Link("pwr:alarmCheck.INPJ","pwr:alarmSeverity04.VAL")
#! Field("pwr:alarmCheck.INPK",16777215,1,"pwr:alarmCheck.INPK")
#! Link("pwr:alarmCheck.INPK","pwr:alarmSeverity05.VAL")
#! Field("pwr:alarmCheck.INPL",16777215,1,"pwr:alarmCheck.INPL")
#! Link("pwr:alarmCheck.INPL","pwr:alarmSeverity06.VAL")
#! Field("pwr:alarmCheck.INPM",16777215,1,"pwr:alarmCheck.INPM")
#! Link("pwr:alarmCheck.INPM","pwr:activeAlarms.VAL")
#! Field("pwr:alarmCheck.VALA",16777215,0,"pwr:alarmCheck.VALA")
#! Field("pwr:alarmCheck.FLNK",16777215,1,"pwr:alarmCheck.FLNK")
#! Link("pwr:alarmCheck.FLNK","pwr:activeAlarmNames")
#! Field("pwr:alarmCheck.OUTC",16777215,1,"pwr:alarmCheck.OUTC")
#! Link("pwr:alarmCheck.OUTC","pwr:acFailActive.VAL")

#! TemplateInstance("di-state01",1380,2860,0,"")
#! TemplateField("di-state01","setContacterState",16777215,0,1)
#! TemplateField("di-state01","DINUM",16777215,0,1)
#! TemplateField("di-state01","OFFSET",16777215,0,1)


#! TemplateInstance("di-state02",1680,2860,0,"")
#! TemplateField("di-state02","setContacterState",16777215,0,1)
#! TemplateField("di-state02","DINUM",16777215,0,1)
#! TemplateField("di-state02","OFFSET",16777215,0,1)


#! TemplateInstance("di-state03",1960,2860,0,"")
#! TemplateField("di-state03","setContacterState",16777215,0,1)
#! TemplateField("di-state03","DINUM",16777215,0,1)
#! TemplateField("di-state03","OFFSET",16777215,0,1)


#! TemplateInstance("di-state04",1380,3140,0,"")
#! TemplateField("di-state04","setContacterState",16777215,0,1)
#! TemplateField("di-state04","DINUM",16777215,0,1)
#! TemplateField("di-state04","OFFSET",16777215,0,1)


#! TemplateInstance("di-state05",1680,3140,0,"")
#! TemplateField("di-state05","setContacterState",16777215,0,1)
#! TemplateField("di-state05","DINUM",16777215,0,1)
#! TemplateField("di-state05","OFFSET",16777215,0,1)

#! Record("pwr:alarmNames04",3460,2881,0,1,"pwr:alarmNames04")
#! Field("pwr:alarmNames04.VAL",16777215,1,"pwr:alarmNames04.VAL")
#! Record("pwr:alarmNames05",3460,3061,0,1,"pwr:alarmNames05")
#! Field("pwr:alarmNames05.VAL",16777215,1,"pwr:alarmNames05.VAL")
#! Record("pwr:alarmNames06",3460,3241,0,1,"pwr:alarmNames06")
#! Field("pwr:alarmNames06.VAL",16777215,1,"pwr:alarmNames06.VAL")
#! Record("pwr:alarmSeverity04",4560,2701,0,1,"pwr:alarmSeverity04")
#! Field("pwr:alarmSeverity04.VAL",16777215,0,"pwr:alarmSeverity04.VAL")
#! Record("pwr:alarmSeverity05",4740,2707,0,1,"pwr:alarmSeverity05")
#! Field("pwr:alarmSeverity05.VAL",16777215,0,"pwr:alarmSeverity05.VAL")
#! Record("pwr:alarmSeverity06",4920,2741,0,1,"pwr:alarmSeverity06")
#! Field("pwr:alarmSeverity06.VAL",16777215,0,"pwr:alarmSeverity06.VAL")
#! Record("pwr:busVoltage",6720,1426,0,1,"pwr:busVoltage")
#! Record("pwr:batteryCurrent",6940,1481,0,1,"pwr:batteryCurrent")
#! Record("pwr:loadCurrent",7160,1481,0,1,"pwr:loadCurrent")
#! Record("pwr:rectifierCurrent",7380,1481,0,1,"pwr:rectifierCurrent")
#! Record("pwr:loadPower",7600,1481,0,1,"pwr:loadPower")
#! Record("pwr:batteryTemp",6720,1761,0,1,"pwr:batteryTemp")
#! Record("pwr:systemPower",6940,1761,0,1,"pwr:systemPower")
#! Record("pwr:rectifierCurrentSum",7160,1761,0,1,"pwr:rectifierCurrentSum")
#! Record("pwr:acVoltage",7380,1761,0,1,"pwr:acVoltage")
#! Record("pwr:rackTemp",7600,1761,0,1,"pwr:rackTemp")
#! Record("pwr:rackTempHighThreshold",6720,1946,0,1,"pwr:rackTempHighThreshold")
#! Record("pwr:activeAlarmNames",3860,3054,0,1,"pwr:activeAlarmNames")
#! Field("pwr:activeAlarmNames.INP",16777215,0,"pwr:activeAlarmNames.INP")
#! Link("pwr:activeAlarmNames.INP","pwr:alarmCheck.VALA")
#! Record("pwr:state",6500,2687,0,1,"pwr:state")
#! Record("pwr:subState",6700,2690,0,1,"pwr:subState")
#! Record("pwr:cmdStart",6500,2876,0,1,"pwr:cmdStart")
#! Record("pwr:cmdStop",6500,2990,0,1,"pwr:cmdStop")
#! Record("pwr:cmdRun",6500,3090,0,1,"pwr:cmdRun")
#! Record("pwr:majorVers",5460,1528,0,1,"pwr:majorVers")
#! Record("pwr:minorVers",5460,1668,0,1,"pwr:minorVers")
#! Record("pwr:modbusVers",5460,1808,0,1,"pwr:modbusVers")
#! Record("pwr:numRectifiers",5680,1528,0,1,"pwr:numRectifiers")
#! Record("pwr:serialNumber",5680,1668,0,1,"pwr:serialNumber")
#! Box(Box0,2500,2580,1240,1660,0,16777215,null)
#! Box(Box3,5420,1500,5940,1960,0,16777215,null)
#! Box(Box2,6700,1360,7820,2160,0,16777215,null)
#! Box(Box1,3420,1360,4480,2000,0,16777215,null)
#! TextBox(TB0,1340,1680,1600,1720,0,"Dialog",12,1,16777215,"digital output control and interlock",null)
#! TextBox(TB3,5720,1820,5880,1880,0,"Dialog",12,1,16777215,"Miscellaneous registers",null)
#! TextBox(TB2,7020,1400,7380,1440,0,"Dialog",12,1,16777215,"Power supply analogue setup and monitoring.",null)
#! TextBox(TB1,3520,1380,3760,1420,0,"Dialog",12,1,16777215,"Alarm summary records",null)
#! Record("pwr:lastError",6700,2810,0,1,"pwr:lastError")
#! Box(Box4,3760,1560,3760,1560,0,16777215,null)
#! Box(Box5,3760,1560,3760,1560,0,16777215,null)
#! Record("pwr:acFailActive",4160,2974,0,1,"pwr:acFailActive")
#! Field("pwr:acFailActive.VAL",16777215,0,"pwr:acFailActive.VAL")
